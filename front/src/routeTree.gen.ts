/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as TspRouteImport } from "./routes/tsp"
import { Route as EducationRouteImport } from "./routes/education"
import { Route as IndexRouteImport } from "./routes/index"

const TspRoute = TspRouteImport.update({
  id: "/tsp",
  path: "/tsp",
  getParentRoute: () => rootRouteImport,
} as any)
const EducationRoute = EducationRouteImport.update({
  id: "/education",
  path: "/education",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/education": typeof EducationRoute
  "/tsp": typeof TspRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/education": typeof EducationRoute
  "/tsp": typeof TspRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/education": typeof EducationRoute
  "/tsp": typeof TspRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/education" | "/tsp"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/education" | "/tsp"
  id: "__root__" | "/" | "/education" | "/tsp"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EducationRoute: typeof EducationRoute
  TspRoute: typeof TspRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/tsp": {
      id: "/tsp"
      path: "/tsp"
      fullPath: "/tsp"
      preLoaderRoute: typeof TspRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/education": {
      id: "/education"
      path: "/education"
      fullPath: "/education"
      preLoaderRoute: typeof EducationRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EducationRoute: EducationRoute,
  TspRoute: TspRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
